// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
	TRelationship extends
		| prismic.CustomTypeModelFetchCustomTypeLevel1
		| prismic.CustomTypeModelFetchCustomTypeLevel2
		| prismic.CustomTypeModelFetchGroupLevel1
		| prismic.CustomTypeModelFetchGroupLevel2,
	TData extends Record<
		string,
		prismic.AnyRegularField | prismic.GroupField | prismic.NestedGroupField | prismic.SliceZone
	>,
	TLang extends string
> =
	// Content relationship fields
	{
		[TSubRelationship in Extract<
			TRelationship['fields'][number],
			prismic.CustomTypeModelFetchContentRelationshipLevel1
		> as TSubRelationship['id']]: ContentRelationshipFieldWithData<
			TSubRelationship['customtypes'],
			TLang
		>;
	} & // Group
	{
		[TGroup in Extract<
			TRelationship['fields'][number],
			prismic.CustomTypeModelFetchGroupLevel1 | prismic.CustomTypeModelFetchGroupLevel2
		> as TGroup['id']]: TData[TGroup['id']] extends prismic.GroupField<infer TGroupData>
			? prismic.GroupField<PickContentRelationshipFieldData<TGroup, TGroupData, TLang>>
			: never;
	} & // Other fields
	{
		[TFieldKey in Extract<TRelationship['fields'][number], string>]: TFieldKey extends keyof TData
			? TData[TFieldKey]
			: never;
	};

type ContentRelationshipFieldWithData<
	TCustomType extends
		| readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
		| readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
	TLang extends string = string
> = {
	[ID in Exclude<TCustomType[number], string>['id']]: prismic.ContentRelationshipField<
		ID,
		TLang,
		PickContentRelationshipFieldData<
			Extract<TCustomType[number], { id: ID }>,
			Extract<prismic.Content.AllDocumentTypes, { type: ID }>['data'],
			TLang
		>
	>;
}[Exclude<TCustomType[number], string>['id']];

/**
 * Item in *Home → Feature Projects*
 */
export interface HomeDocumentDataFeatureProjectsItem {
	/**
	 * Items field in *Home → Feature Projects*
	 *
	 * - **Field Type**: Content Relationship
	 * - **Placeholder**: *None*
	 * - **API ID Path**: home.feature_projects[].items
	 * - **Documentation**: https://prismic.io/docs/fields/content-relationship
	 */
	items: ContentRelationshipFieldWithData<
		[
			{
				id: 'projects';
				fields: [
					'description',
					'title',
					{
						id: 'preview';
						fields: [
							'preview_image_landscape',
							'preview_video_url_landscape',
							'preview_image_portrait',
							'preview_video_url_portrait'
						];
					},
					'client'
				];
			}
		]
	>;
}

type HomeDocumentDataSlicesSlice = never;

/**
 * Content for Home documents
 */
interface HomeDocumentData {
	/**
	 * Feature Project field in *Home*
	 *
	 * - **Field Type**: Content Relationship
	 * - **Placeholder**: *None*
	 * - **API ID Path**: home.feature_project
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/content-relationship
	 */
	feature_project: ContentRelationshipFieldWithData<
		[
			{
				id: 'projects';
				fields: [
					'title',
					'description',
					{
						id: 'preview';
						fields: [
							'preview_image_landscape',
							'preview_video_url_landscape',
							'preview_image_portrait',
							'preview_video_url_portrait'
						];
					},
					'client'
				];
			}
		]
	>;

	/**
	 * Feature Projects field in *Home*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: home.feature_projects[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	feature_projects: prismic.GroupField<Simplify<HomeDocumentDataFeatureProjectsItem>>;

	/**
	 * Slice Zone field in *Home*
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: *None*
	 * - **API ID Path**: home.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/slices
	 */
	slices: prismic.SliceZone<HomeDocumentDataSlicesSlice> /**
	 * Meta Title field in *Home*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A title of the page used for social media and search engines
	 * - **API ID Path**: home.meta_title
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */;
	meta_title: prismic.KeyTextField;

	/**
	 * Meta Description field in *Home*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A brief summary of the page
	 * - **API ID Path**: home.meta_description
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	meta_description: prismic.KeyTextField;

	/**
	 * Meta Image field in *Home*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: home.meta_image
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	meta_image: prismic.ImageField<never>;
}

/**
 * Home document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> = prismic.PrismicDocumentWithoutUID<
	Simplify<HomeDocumentData>,
	'home',
	Lang
>;

type PageDocumentDataSlicesSlice =
	| VideoSlice
	| SpacerSlice
	| DocumentationSlice
	| FeatureListSlice
	| InputSlice
	| WheelSlice
	| CircleSlice
	| RichTextSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
	/**
	 * Title field in *Page*
	 *
	 * - **Field Type**: Rich Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page.title
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/rich-text
	 */
	title: prismic.RichTextField;

	/**
	 * No Footer field in *Page*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: page.no_footer
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	no_footer: prismic.BooleanField;

	/**
	 * Slice Zone field in *Page*
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/slices
	 */
	slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
	 * Meta Title field in *Page*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A title of the page used for social media and search engines
	 * - **API ID Path**: page.meta_title
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */;
	meta_title: prismic.KeyTextField;

	/**
	 * Meta Description field in *Page*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A brief summary of the page
	 * - **API ID Path**: page.meta_description
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	meta_description: prismic.KeyTextField;

	/**
	 * Meta Image field in *Page*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: page.meta_image
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
	Simplify<PageDocumentData>,
	'page',
	Lang
>;

type PeopleDocumentDataSlicesSlice = never;

/**
 * Content for People documents
 */
interface PeopleDocumentData {
	/**
	 * Name field in *People*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: people.name
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	name: prismic.KeyTextField;

	/**
	 * Link field in *People*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: people.link
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	link: prismic.LinkField<string, string, unknown, prismic.FieldState, never>;

	/**
	 * Slice Zone field in *People*
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: *None*
	 * - **API ID Path**: people.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/slices
	 */
	slices: prismic.SliceZone<PeopleDocumentDataSlicesSlice> /**
	 * Meta Title field in *People*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A title of the page used for social media and search engines
	 * - **API ID Path**: people.meta_title
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */;
	meta_title: prismic.KeyTextField;

	/**
	 * Meta Description field in *People*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A brief summary of the page
	 * - **API ID Path**: people.meta_description
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	meta_description: prismic.KeyTextField;

	/**
	 * Meta Image field in *People*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: people.meta_image
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	meta_image: prismic.ImageField<never>;
}

/**
 * People document from Prismic
 *
 * - **API ID**: `people`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PeopleDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
	Simplify<PeopleDocumentData>,
	'people',
	Lang
>;

/**
 * Item in *Projects → Preview*
 */
export interface ProjectsDocumentDataPreviewItem {
	/**
	 * Preview Image Landscape field in *Projects → Preview*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.preview[].preview_image_landscape
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	preview_image_landscape: prismic.ImageField<never>;

	/**
	 * Preview Video Url Landscape field in *Projects → Preview*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.preview[].preview_video_url_landscape
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	preview_video_url_landscape: prismic.KeyTextField;

	/**
	 * Preview Image Portrait field in *Projects → Preview*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.preview[].preview_image_portrait
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	preview_image_portrait: prismic.ImageField<never>;

	/**
	 * Preview Video Url Portrait field in *Projects → Preview*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.preview[].preview_video_url_portrait
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	preview_video_url_portrait: prismic.KeyTextField;
}

/**
 * Item in *Projects → Main*
 */
export interface ProjectsDocumentDataMainItem {
	/**
	 * Main Image field in *Projects → Main*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.main[].main_image
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	main_image: prismic.ImageField<never>;

	/**
	 * Main Video Url field in *Projects → Main*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.main[].main_video_url
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	main_video_url: prismic.KeyTextField;

	/**
	 * Width field in *Projects → Main*
	 *
	 * - **Field Type**: Number
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.main[].width
	 * - **Documentation**: https://prismic.io/docs/fields/number
	 */
	width: prismic.NumberField;

	/**
	 * Height field in *Projects → Main*
	 *
	 * - **Field Type**: Number
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.main[].height
	 * - **Documentation**: https://prismic.io/docs/fields/number
	 */
	height: prismic.NumberField;
}

/**
 * Item in *Projects → Credits*
 */
export interface ProjectsDocumentDataCreditsItem {
	/**
	 * Label field in *Projects → Credits*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.credits[].label
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	label: prismic.KeyTextField;

	/**
	 * Person field in *Projects → Credits*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.credits[].person
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	person: prismic.Repeatable<prismic.LinkField<string, string, unknown, prismic.FieldState, never>>;
}

type ProjectsDocumentDataSlicesSlice =
	| WheelSlice
	| CircleSlice
	| FeatureListSlice
	| InputSlice
	| RichTextSlice
	| SpacerSlice
	| DocumentationSlice;

/**
 * Content for Projects documents
 */
interface ProjectsDocumentData {
	/**
	 * Year field in *Projects*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.year
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	year: prismic.SelectField<'2010' | '2022' | '2023' | '2024' | '2025' | '2026' | '2027'>;

	/**
	 * Month field in *Projects*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.month
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	month: prismic.SelectField<
		| 'January'
		| 'February'
		| 'March'
		| 'April'
		| 'May'
		| 'June'
		| 'July'
		| 'August'
		| 'September'
		| 'October'
		| 'November'
		| 'December'
	>;

	/**
	 * Title field in *Projects*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.title
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	title: prismic.KeyTextField;

	/**
	 * Client field in *Projects*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.client
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	client: prismic.KeyTextField;

	/**
	 * Description field in *Projects*
	 *
	 * - **Field Type**: Rich Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.description
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/rich-text
	 */
	description: prismic.RichTextField;

	/**
	 * Video starts dark field in *Projects*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: projects.video_is_dark
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	video_is_dark: prismic.BooleanField;

	/**
	 * Preview field in *Projects*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.preview[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	preview: prismic.GroupField<Simplify<ProjectsDocumentDataPreviewItem>>;

	/**
	 * Main field in *Projects*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.main[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	main: prismic.GroupField<Simplify<ProjectsDocumentDataMainItem>>;

	/**
	 * Credits field in *Projects*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.credits[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	credits: prismic.GroupField<Simplify<ProjectsDocumentDataCreditsItem>>;

	/**
	 * Slice Zone field in *Projects*
	 *
	 * - **Field Type**: Slice Zone
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.slices[]
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/slices
	 */
	slices: prismic.SliceZone<ProjectsDocumentDataSlicesSlice> /**
	 * Meta Title field in *Projects*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A title of the page used for social media and search engines
	 * - **API ID Path**: projects.meta_title
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */;
	meta_title: prismic.KeyTextField;

	/**
	 * Meta Description field in *Projects*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: A brief summary of the page
	 * - **API ID Path**: projects.meta_description
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	meta_description: prismic.KeyTextField;

	/**
	 * Meta Image field in *Projects*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: projects.meta_image
	 * - **Tab**: SEO & Metadata
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	meta_image: prismic.ImageField<never>;
}

/**
 * Projects document from Prismic
 *
 * - **API ID**: `projects`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectsDocument<Lang extends string = string> = prismic.PrismicDocumentWithUID<
	Simplify<ProjectsDocumentData>,
	'projects',
	Lang
>;

/**
 * Content for Settings documents
 */
interface SettingsDocumentData {
	/**
	 * Navigation Header field in *Settings*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: settings.navigation_header
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	navigation_header: prismic.Repeatable<
		prismic.LinkField<string, string, unknown, prismic.FieldState, never>
	>;

	/**
	 * Navigation Footer field in *Settings*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: settings.navigation_footer
	 * - **Tab**: Main
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	navigation_footer: prismic.Repeatable<
		prismic.LinkField<string, string, unknown, prismic.FieldState, never>
	>;
}

/**
 * Settings document from Prismic
 *
 * - **API ID**: `settings`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type SettingsDocument<Lang extends string = string> = prismic.PrismicDocumentWithoutUID<
	Simplify<SettingsDocumentData>,
	'settings',
	Lang
>;

export type AllDocumentTypes =
	| HomeDocument
	| PageDocument
	| PeopleDocument
	| ProjectsDocument
	| SettingsDocument;

/**
 * Item in *Circle → Default → Primary → Items*
 */
export interface CircleSliceDefaultPrimaryItemsItem {
	/**
	 * Text field in *Circle → Default → Primary → Items*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: circle.default.primary.items[].text
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	text: prismic.KeyTextField;
}

/**
 * Primary content in *Circle → Default → Primary*
 */
export interface CircleSliceDefaultPrimary {
	/**
	 * Items field in *Circle → Default → Primary*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: circle.default.primary.items[]
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	items: prismic.GroupField<Simplify<CircleSliceDefaultPrimaryItemsItem>>;
}

/**
 * Default variation for Circle Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CircleSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<CircleSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *Circle*
 */
type CircleSliceVariation = CircleSliceDefault;

/**
 * Circle Shared Slice
 *
 * - **API ID**: `circle`
 * - **Description**: Circle
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type CircleSlice = prismic.SharedSlice<'circle', CircleSliceVariation>;

/**
 * Item in *Documentation → Default → Primary → items*
 */
export interface DocumentationSliceDefaultPrimaryItemsItem {
	/**
	 * Image field in *Documentation → Default → Primary → items*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: documentation.default.primary.items[].image
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	image: prismic.ImageField<never>;

	/**
	 * Video Url field in *Documentation → Default → Primary → items*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: documentation.default.primary.items[].video_url
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	video_url: prismic.KeyTextField;

	/**
	 * Play field in *Documentation → Default → Primary → items*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **Default Value**: no-sound
	 * - **API ID Path**: documentation.default.primary.items[].play
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	play: prismic.SelectField<'no-sound' | 'has-sound', 'filled'>;
}

/**
 * Primary content in *Documentation → Default → Primary*
 */
export interface DocumentationSliceDefaultPrimary {
	/**
	 * Items per row field in *Documentation → Default → Primary*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: documentation.default.primary.items_per_row
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	items_per_row: prismic.SelectField<'1' | '2' | '3' | '4'>;

	/**
	 * items field in *Documentation → Default → Primary*
	 *
	 * - **Field Type**: Group
	 * - **Placeholder**: *None*
	 * - **API ID Path**: documentation.default.primary.items[]
	 * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
	 */
	items: prismic.GroupField<Simplify<DocumentationSliceDefaultPrimaryItemsItem>>;
}

/**
 * Default variation for Documentation Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DocumentationSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<DocumentationSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *Documentation*
 */
type DocumentationSliceVariation = DocumentationSliceDefault;

/**
 * Documentation Shared Slice
 *
 * - **API ID**: `documentation`
 * - **Description**: Documentation
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type DocumentationSlice = prismic.SharedSlice<'documentation', DocumentationSliceVariation>;

/**
 * Primary content in *FeatureList → Default → Primary*
 */
export interface FeatureListSliceDefaultPrimary {
	/**
	 * Take Collaborators Automatically field in *FeatureList → Default → Primary*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: feature_list.default.primary.take_collaborators_automatically
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	take_collaborators_automatically: prismic.BooleanField;

	/**
	 * Items field in *FeatureList → Default → Primary*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: feature_list.default.primary.items
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	items: prismic.Repeatable<prismic.LinkField<string, string, unknown, prismic.FieldState, never>>;

	/**
	 * Title field in *FeatureList → Default → Primary*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: feature_list.default.primary.title
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	title: prismic.KeyTextField;
}

/**
 * Default variation for FeatureList Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeatureListSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<FeatureListSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *FeatureList*
 */
type FeatureListSliceVariation = FeatureListSliceDefault;

/**
 * FeatureList Shared Slice
 *
 * - **API ID**: `feature_list`
 * - **Description**: FeatureList
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type FeatureListSlice = prismic.SharedSlice<'feature_list', FeatureListSliceVariation>;

/**
 * Default variation for Input Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type InputSliceDefault = prismic.SharedSliceVariation<
	'default',
	Record<string, never>,
	never
>;

/**
 * Slice variation for *Input*
 */
type InputSliceVariation = InputSliceDefault;

/**
 * Input Shared Slice
 *
 * - **API ID**: `input`
 * - **Description**: Input
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type InputSlice = prismic.SharedSlice<'input', InputSliceVariation>;

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
	/**
	 * Content field in *RichText → Default → Primary*
	 *
	 * - **Field Type**: Rich Text
	 * - **Placeholder**: Lorem ipsum...
	 * - **API ID Path**: rich_text.default.primary.content
	 * - **Documentation**: https://prismic.io/docs/fields/rich-text
	 */
	content: prismic.RichTextField;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<RichTextSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type RichTextSlice = prismic.SharedSlice<'rich_text', RichTextSliceVariation>;

/**
 * Primary content in *Spacer → Default → Primary*
 */
export interface SpacerSliceDefaultPrimary {
	/**
	 * Line field in *Spacer → Default → Primary*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: spacer.default.primary.line
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	line: prismic.BooleanField;

	/**
	 * Spacer Desktop field in *Spacer → Default → Primary*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: spacer.default.primary.spacer_desktop
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	spacer_desktop: prismic.SelectField<'none' | 'xs' | 'sm' | 'md' | 'xl' | 'xxl'>;

	/**
	 * Spacer mobile field in *Spacer → Default → Primary*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: spacer.default.primary.spacer_mobile
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	spacer_mobile: prismic.SelectField<'none' | 'xs' | 'sm' | 'md' | 'xl' | 'xxl'>;

	/**
	 * Max Width field in *Spacer → Default → Primary*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: spacer.default.primary.max_width
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	max_width: prismic.BooleanField;
}

/**
 * Default variation for Spacer Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type SpacerSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<SpacerSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *Spacer*
 */
type SpacerSliceVariation = SpacerSliceDefault;

/**
 * Spacer Shared Slice
 *
 * - **API ID**: `spacer`
 * - **Description**: Spacer
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type SpacerSlice = prismic.SharedSlice<'spacer', SpacerSliceVariation>;

/**
 * Primary content in *Video → Default → Primary*
 */
export interface VideoSliceDefaultPrimary {
	/**
	 * Image field in *Video → Default → Primary*
	 *
	 * - **Field Type**: Image
	 * - **Placeholder**: *None*
	 * - **API ID Path**: video.default.primary.image
	 * - **Documentation**: https://prismic.io/docs/fields/image
	 */
	image: prismic.ImageField<never>;

	/**
	 * VideoUrl field in *Video → Default → Primary*
	 *
	 * - **Field Type**: Text
	 * - **Placeholder**: *None*
	 * - **API ID Path**: video.default.primary.videourl
	 * - **Documentation**: https://prismic.io/docs/fields/text
	 */
	videourl: prismic.KeyTextField;

	/**
	 * Options field in *Video → Default → Primary*
	 *
	 * - **Field Type**: Select
	 * - **Placeholder**: *None*
	 * - **API ID Path**: video.default.primary.options
	 * - **Documentation**: https://prismic.io/docs/fields/select
	 */
	options: prismic.SelectField<'no-autoplay' | 'autoplay-has-sound' | 'autoplay-no-sound'>;
}

/**
 * Default variation for Video Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<VideoSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *Video*
 */
type VideoSliceVariation = VideoSliceDefault;

/**
 * Video Shared Slice
 *
 * - **API ID**: `video`
 * - **Description**: Video
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type VideoSlice = prismic.SharedSlice<'video', VideoSliceVariation>;

/**
 * Primary content in *Wheel → Default → Primary*
 */
export interface WheelSliceDefaultPrimary {
	/**
	 * Take Collaborators Automatically field in *Wheel → Default → Primary*
	 *
	 * - **Field Type**: Boolean
	 * - **Placeholder**: *None*
	 * - **Default Value**: false
	 * - **API ID Path**: wheel.default.primary.take_collaborators_automatically
	 * - **Documentation**: https://prismic.io/docs/fields/boolean
	 */
	take_collaborators_automatically: prismic.BooleanField;

	/**
	 * Items field in *Wheel → Default → Primary*
	 *
	 * - **Field Type**: Link
	 * - **Placeholder**: *None*
	 * - **API ID Path**: wheel.default.primary.items
	 * - **Documentation**: https://prismic.io/docs/fields/link
	 */
	items: prismic.Repeatable<prismic.LinkField<string, string, unknown, prismic.FieldState, never>>;
}

/**
 * Default variation for Wheel Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type WheelSliceDefault = prismic.SharedSliceVariation<
	'default',
	Simplify<WheelSliceDefaultPrimary>,
	never
>;

/**
 * Slice variation for *Wheel*
 */
type WheelSliceVariation = WheelSliceDefault;

/**
 * Wheel Shared Slice
 *
 * - **API ID**: `wheel`
 * - **Description**: Wheel
 * - **Documentation**: https://prismic.io/docs/slices
 */
export type WheelSlice = prismic.SharedSlice<'wheel', WheelSliceVariation>;

declare module '@prismicio/client' {
	interface CreateClient {
		(
			repositoryNameOrEndpoint: string,
			options?: prismic.ClientConfig
		): prismic.Client<AllDocumentTypes>;
	}

	interface CreateWriteClient {
		(
			repositoryNameOrEndpoint: string,
			options: prismic.WriteClientConfig
		): prismic.WriteClient<AllDocumentTypes>;
	}

	interface CreateMigration {
		(): prismic.Migration<AllDocumentTypes>;
	}

	namespace Content {
		export type {
			HomeDocument,
			HomeDocumentData,
			HomeDocumentDataFeatureProjectsItem,
			HomeDocumentDataSlicesSlice,
			PageDocument,
			PageDocumentData,
			PageDocumentDataSlicesSlice,
			PeopleDocument,
			PeopleDocumentData,
			PeopleDocumentDataSlicesSlice,
			ProjectsDocument,
			ProjectsDocumentData,
			ProjectsDocumentDataPreviewItem,
			ProjectsDocumentDataMainItem,
			ProjectsDocumentDataCreditsItem,
			ProjectsDocumentDataSlicesSlice,
			SettingsDocument,
			SettingsDocumentData,
			AllDocumentTypes,
			CircleSlice,
			CircleSliceDefaultPrimaryItemsItem,
			CircleSliceDefaultPrimary,
			CircleSliceVariation,
			CircleSliceDefault,
			DocumentationSlice,
			DocumentationSliceDefaultPrimaryItemsItem,
			DocumentationSliceDefaultPrimary,
			DocumentationSliceVariation,
			DocumentationSliceDefault,
			FeatureListSlice,
			FeatureListSliceDefaultPrimary,
			FeatureListSliceVariation,
			FeatureListSliceDefault,
			InputSlice,
			InputSliceVariation,
			InputSliceDefault,
			RichTextSlice,
			RichTextSliceDefaultPrimary,
			RichTextSliceVariation,
			RichTextSliceDefault,
			SpacerSlice,
			SpacerSliceDefaultPrimary,
			SpacerSliceVariation,
			SpacerSliceDefault,
			VideoSlice,
			VideoSliceDefaultPrimary,
			VideoSliceVariation,
			VideoSliceDefault,
			WheelSlice,
			WheelSliceDefaultPrimary,
			WheelSliceVariation,
			WheelSliceDefault
		};
	}
}
